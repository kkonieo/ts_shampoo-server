[tool.poetry]
name = "ts_shampoo-server"
version = "0.1.0"
description = ""
authors = [
     "nyh <dkzndk1100@naver.com>"
     ]

[tool.poetry.dependencies]
python = "^3.8"
Django = "^4.0.1"
django-dotenv = "^1.4.2"
djangorestframework = "^3.13.1"
PyMySQL = "^1.0.2"
django-restframework = "^0.0.1"
djangorestframework-simplejwt = "^5.0.0"
dj-rest-auth = "^2.2.2"
django-allauth = "^0.47.0"
django-hashid-field = "^3.3.3"
drf-yasg = "^1.20.0"
PyJWT = "^2.3.0"
# google auth api
google-api-python-client = "^2.36.0"
google-api-core = "^2.4.0"
google-auth = "^2.5.0"
google-auth-httplib2 = "^0.1.0"
googleapis-common-protos = "^1.54.0"
django-cors-headers = "^3.11.0"
Pillow = "^9.0.1"
django-filter = "^21.1"

[tool.poetry.dev-dependencies]
isort = "^5.10.1"
flake8 = "^4.0.1"
black = "^21.12b0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# isort 설정
[tool.isort]
# isort 한줄의 길이를 88글자로 제한한다.
line_length = 88
skip_glob = "**/migrations/*.py"
include_trailing_comma = true
use_parentheses = true

# black 설정
[tool.black]
# black 한줄의 길이를 88글자로 제한한다.
line-length = 88
# 확장자가 `py`가 붙은경우에 black 포멧터를 작동한다.
include = '\.pyi?$' 
# black 포멧터가 작동하지 않는 경우 ex:) migrations (
extend-exclude = [
     "migrations"
]